<project name="tcjson" default="build">
    <property name="app" value="tcjson"/>
    <property name="build.sysclasspath" value="ignore"/>

    <tstamp>
        <format property="version" timezone="UTC" pattern="yyyyMMdd"/>
    </tstamp>

    <property name="distdir" value="build/${app}-${version}"/>
    <property name="teamcity.home" location="${basedir}/../TeamCity"/>
    <property name="teamcity.appdir" location="${teamcity.home}/webapps/ROOT/WEB-INF"/>
    <property name="teamcity.plugindir" location="${user.home}/.BuildServer/plugins"/>

    <path id="build.classpath">
        <fileset dir="lib" includes="*.jar"/>
        <pathelement location="build/classes"/>
        <fileset dir="${teamcity.home}/lib" includes="*.jar" excludes="${app}*.jar"/>
        <fileset dir="${teamcity.appdir}/lib" includes="*.jar" excludes="${app}*.jar"/>
    </path>

    <target name="test">
        <pathconvert property="tmp" refid="build.classpath"/>
        <echo message="${tmp}"/>
    </target>

    <target name="build"
            description="Builds everything from scratch"
            depends="clean, zip"/>

    <target name="clean"
            description="Removes all build artefacts">
        <delete dir="build"/>
    </target>

    <target name="zip" depends="run.tests">
        <copy file="teamcity-plugin.xml" todir="${distdir}">
          <filterset>
            <filter token="VERSION" value="${version}"/>
          </filterset>
        </copy>
        <zip destfile="build/${app}-${version}.zip" compress="true">
            <fileset dir="${distdir}">
                <include name="**/*"/>
                <exclude name="*-tests.jar"/>
            </fileset>
            <fileset dir="build/classes">
                <include name="version.properties"/>
            </fileset>
        </zip>
    </target>

    <target name="compile" depends="dir.build">
        <mkdir dir="build/classes"/>
        <javac classpathref="build.classpath"
               destdir="build/classes"
               debug="yes"
               failonerror="yes"
               source="1.6"
               target="1.6">

            <src path="src/main"/>
        </javac>

        <mkdir dir="build/test-classes"/>
        <javac classpathref="build.classpath"
               destdir="build/test-classes"
               debug="yes"
               failonerror="yes"
               source="1.6"
               target="1.6">

            <src path="src/tests"/>
        </javac>
    </target>

    <target name="dir.build">
        <mkdir dir="build"/>
    </target>

    <target name="dir.dist" depends="dir.build">
        <mkdir dir="${distdir}/server"/>
    </target>

    <target name="jars"
            depends="jar.app, jar.tests"/>

    <target name="jar.app" depends="compile, build.identifier, dir.dist">
        <jar destfile="${distdir}/server/${app}.jar" compress="false">
            <fileset dir="build/classes"/>
            <fileset dir="src">
                <include name="META-INF/**/*"/>
            </fileset>
        </jar>
    </target>

    <target name="jar.tests" depends="compile, dir.dist">
        <jar destfile="${distdir}/${app}-tests.jar" compress="false">
            <fileset dir="build/test-classes"/>
        </jar>
    </target>

    <target name="build.identifier">
        <echo file="build/classes/version.properties" message="version=${version}${line.separator}" append="false"/>
        <exec executable="bash" output="build/classes/version.properties" append="true">
            <arg value="get-git-info.sh"/>
        </exec>
    </target>

    <target name="run.tests" depends="jars">
        <property name="outdir" value="build/reports/tests"/>
        <mkdir dir="${outdir}"/>
        <junit fork="yes" forkmode="once" printsummary="no" showoutput="yes">
            <classpath>
                <path refid="build.classpath"/>
                <fileset dir="${distdir}" includes="*.jar"/>
                <fileset dir="${distdir}/server" includes="*.jar"/>
            </classpath>

            <formatter type="brief" usefile="no"/>

            <batchtest haltonfailure="yes">
                <fileset dir="src/tests">
                    <include name="**/*Tests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="deploy" depends="clean, run.tests, zip"
            description="Deploys to a local TeamCity server">
        <copy file="build/${app}-${version}.zip" todir="${teamcity.plugindir}"/>
    </target>
</project>
